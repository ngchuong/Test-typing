import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import { Box, Container, Grid } from "@mui/material";
import { Dummy } from "../const/text.js";

const getFirstWord = (str: string) => str.substring(0, str.indexOf(" "));
const getRemainWord = (str: string) => str.substring(str.indexOf(" ") + 1);

const Home: NextPage = () => {
  const listString = Dummy.split(" ") || [];

  const [aWord, setAWord] = useState("");

  // Number of word typed
  const [numberWordTyped, setNumberWordTyped] = useState(0);

  // check result of word
  const [arrResult, setArrResult] = useState<boolean[]>([]);

  // Remain item
  const [remainStr, setRemainStr] = useState<string[]>(listString);

  // timer
  const [timer, setTimer] = useState(5);

  useEffect(() => {
    const intervalTimer = setInterval(() => {
      setTimer((cur) => cur - 1);
    }, 1000);

    return () => clearInterval(intervalTimer);
  }, []);

  // render word
  const displayString = listString.map((str, idx) => {
    // normal word
    let displayOneWord = <span>{str}</span>;

    // check word is typed
    if (idx < numberWordTyped) {
      if (!!arrResult[idx]) {
        // correct
        displayOneWord = <span style={{ color: "green" }}>{str}</span>;
      } else {
        // incorrect
        displayOneWord = <span style={{ color: "red" }}>{str}</span>;
      }
    }

    return (
      <span
        key={`${str}_${idx}`}
        style={{
          wordWrap: "break-word",
          width: "100%",
          background: numberWordTyped === idx ? "#c1c1c1" : "unset",
          padding: "2px 4px",
          borderRadius: "8px",
          marginBottom: "4px",
        }}
      >
        {displayOneWord}
        <span>&nbsp;</span>
      </span>
    );
  });

  // TODO: timeup
  if (timer <= 0) {
    return <Box>Time up</Box>;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>My typing</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        display="flex"
        p={2}
        mt={2}
        mb={2}
        sx={{
          border: "solid 1px #c1c1c1",
          borderRadius: "8px",
          fontSize: "18px",
        }}
      >
        <Box width="100%">{displayString}</Box>
      </Box>
      <Box display="flex" justifyContent={"center"}>
        <input
          type="text"
          autoFocus
          value={aWord}
          style={{
            width: "30%",
            height: "100%",
            padding: "10px 24px",
            borderRadius: "8px",
            border: "2px solid #ccc",
            outline: "none",
            fontSize: "18px",
          }}
          placeholder={"Input text here"}
          onChange={(event) => {
            const value = event.target.value;

            if (value.includes(" ")) {
              // set result of word
              setArrResult([
                ...arrResult,
                value.trim() === remainStr[0] ? true : false,
              ]);

              // check remain word
              const [, ...rest] = remainStr;
              setRemainStr(rest);

              // set number of typed
              setNumberWordTyped((cur) => cur + 1);

              // clear input
              setAWord("");
            } else {
              setAWord(event.target.value);
            }
          }}
        />
      </Box>
      <Box>
        <Box>{`Number of word typed: ${numberWordTyped}`}</Box>
        <Box>{`Timer: ${timer}`}s</Box>
      </Box>
    </div>
  );
};

export default Home;
